// The contents of this file are automatically generated by a tool, and should not be directly modified.

using System;
using System.Linq;
using System.Collections.Generic;
using IxMilia.Dxf.Collections;
using IxMilia.Dxf.Sections;
using IxMilia.Dxf.Tables;

namespace IxMilia.Dxf
{
    public partial class DxfLineType : DxfSymbolTableFlags
    {
        internal const string AcDbText = "AcDbLinetypeTableRecord";

        protected override DxfTableType TableType { get { return DxfTableType.LType; } }


        public string Description { get; set; }

        public int AlignmentCode { get; set; }

        private int _elementCount { get; set; }

        public double TotalPatternLength { get; set; }

        public IList<DxfLineTypeElement> Elements { get; private set; }

        public IDictionary<string, DxfXDataApplicationItemCollection> XData { get; } = new DictionaryWithPredicate<string, DxfXDataApplicationItemCollection>((_key, value) => value != null);

        public DxfLineType(string name)
            : this()
        {
            if (string.IsNullOrEmpty(name))
            {
                throw new ArgumentException(nameof(name), $"Parameter '{nameof(name)}' must have a value.");
            }

            Name = name;
        }

        internal DxfLineType()
            : base()
        {
            Description = null;
            AlignmentCode = (int)'A';
            _elementCount = 0;
            TotalPatternLength = 0.0;
            Elements = new ListNonNull<DxfLineTypeElement>();
        }

        public DxfLineType Clone()
        {
            return (DxfLineType)this.MemberwiseClone();
        }
    }
}
